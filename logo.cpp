#include "common.h"

/*  Defines  */

#define SIGNAL_PTN      0xB8BBA3AEU  // "APK" in Morse code

/* 
 *  APK
 *  .- .--. -.-
 *  10 1110  00  10 1110 1110 10  00  1110 10 1110
 *  B8BBA3AE
 */

/*  Local Variables  */

PROGMEM static const uint8_t imgAPK[][144] = { // 24x48 x3
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0xa0, 0x60, 0xa0, 0x50, 0xb0, 0xf0, 0x10, 0x10, 0x10, 0x20, 0x20, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x5c, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x2, 0x1c, 0xe0, 0x7, 0x3d, 0x6a, 0xd5, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xab, 0x55, 0xab, 0x55, 0xab, 0x55, 0xab, 0x55, 0xab, 0x55, 0xab, 0xff, 0x00, 0x00, 0x00, 0x00, 0x1, 0x3, 0x6, 0x5, 0xa, 0xd, 0xa, 0xd, 0xa, 0xd, 0xa, 0xd, 0xa, 0xd, 0xa, 0xd, 0xa, 0xd, 0xa, 0xf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0xa0, 0x60, 0xb0, 0x50, 0xb0, 0x10, 0x10, 0x10, 0x20, 0x20, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xbc, 0x56, 0xab, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x2, 0x1c, 0xe0, 0xff, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xab, 0x55, 0xab, 0x55, 0xab, 0x55, 0xab, 0xd5, 0x6b, 0x3d, 0x7, 0xff, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xfa, 0xd, 0xa, 0xd, 0x6, 0x5, 0x6, 0x3, 0x1, 0x00, 0x00, 0x00, 0x00, 0xff, 0xaa, 0xd5, 0xaa, 0xd5, 0xaa, 0xd5, 0xaa, 0xd5, 0xaa, 0xd5, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
  {0xff, 0xab, 0x55, 0xab, 0x55, 0xab, 0x55, 0xab, 0x55, 0xab, 0x55, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xff, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0xf0, 0xff, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xab, 0x56, 0xa9, 0x50, 0xa0, 0x40, 0x80, 0x00, 0x80, 0x40, 0x20, 0x10, 0xf, 0xff, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xea, 0x55, 0x6a, 0xd5, 0xaa, 0x55, 0xaa, 0x55, 0xab, 0x56, 0xac, 0x58, 0xf0, 0xf, 0xa, 0xd, 0xa, 0xd, 0xa, 0xd, 0xa, 0xd, 0xa, 0xd, 0xf, 0x00, 0x00, 0x00, 0x1, 0x3, 0x6, 0xd, 0xa, 0xd, 0xa, 0xd, 0xf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
};


PROGMEM static const uint8_t imgSoft[] = { // 32x8
    0xC0, 0xC6, 0xCF, 0xDF, 0xFF, 0xFB, 0x73, 0x03, 0x7C, 0xFE, 0xFF, 0xC7, 0xE3, 0xFF, 0x7F, 0x3E,
    0x00, 0xFF, 0xFF, 0xFF, 0x1B, 0x1B, 0x1B, 0x03, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x03,
};

static uint8_t  counter;
static bool     signalOn;

/*---------------------------------------------------------------------------*/
/*                              Main Functions                               */
/*---------------------------------------------------------------------------*/

void initLogo(void)
{
    counter = 120; // 2 secs
}

bool updateLogo(void)
{
    counter--;
    signalOn = (SIGNAL_PTN >> (counter - 15) / 3) & 1;
    arduboy.setRGBled(0, 0, signalOn * 127);
    bool ret = (counter == 0);
    if (ret) {
        dprintln("Start " APP_TITLE " : " APP_INFO);
    }
    return ret;
}

void drawLogo(void)
{
    arduboy.clear();
    int shake = (120 - counter) / 40;
    for (int i = 0; i < 3; i++) {
        int y = 8 + (i == shake) * signalOn;
        arduboy.drawBitmap(24 + i * 25, y, imgAPK[i], 24, 48, WHITE);
    }
    arduboy.drawBitmap(68, 46, imgSoft, 32, 8, WHITE);
    arduboy.printEx(16, 58, F(APP_INFO));
    arduboy.printEx(28, 0, F("FOR #OKTANE18"));
}

